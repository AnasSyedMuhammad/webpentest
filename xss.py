


import requests
import sys
import time

def check_cross_site_tracing(url):
    
    head = {"MyHead":"Testing"}
    req = requests.get(url, headers=head)
    head = req.headers
    if "MyHead" or "myhead" or "MYHEAD" in head:
       
        return " It is vulnerable to Cross Site Tracing (XST)!"
    else:
       
        return " Not vulnerable to XST "


def check_cross_site(url):
    p1 = []
    p2 = []
    p3 = []
    paydone = []
    arr_paylod = ['(inject','"inject','<inject','<script>alert("inject")</script>']
    

    url_split = url.split("=")
    url_split = url_split[0] + '='
    for payload in arr_paylod:
        append_url = url_split + payload
        req = requests.get(append_url).text
        if payload in req:
            paydone.append(payload)
        else:
            pass
    appended_url_1 = url_split + '%27%3Einject%3Csg%2Fonload%3Dconfirm%28%2Finject%2F%29%3Eweb'
    re1 = requests.get(appended_url_1).text
    if "'>inject<svg/onload=confirm(/inject/)>web"in re1:
        paydone.append('%27%3Einject%3Csvg%2Fonload%28%2Finject%2F%29%3Eweb')
    else:
        pass

    appended_url2 = url_split + '%3Cscript%3Ealert%28%22inject%22%29%3C%2Fscript%3E'
    re2 = requests.get(appended_url2).text
    if '<script>alert("inject")</script>' in re2:
        paydone.append('%3Cscript%3Ealert%28%22inject%22%29%3C%2Fscript%3E')
    else:
        pass



    if len(paydone) == 0:
       
        return "Not vulnerable to XSS."
    else:

        print("[+]",len(paydone),"Payloads were found.")
        l="[+]",len(paydone),"Payloads were found."
        for p in paydone:
            print("\n  Payload found")

            print(" The Payload:",p)

            print(" POC:",url_split+p)
            p1.append(" Payload found, Payload:"+p+", POC:%s" +(url_split+p))
    return p1



def get_banner(url):
    try:
        s = requests.get(url)
        if s.status_code == 200:
            s = s.status_code
        else:
            
            return "[!] Error with statu code:"+s.status_code
    except:
       
        exit()
        return "[!] Error with the first request."


   
    return """ Target: {}""".format(url)